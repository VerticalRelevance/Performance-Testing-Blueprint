AWSTemplateFormatVersion: "2010-09-09"

Description: >
  AWS Cloudformation Template for creating the distributed performance test system described in the Performance Test Blueprint.

Parameters:
  PipelineName:
    Description: A name for pipeline
    Type: String
  S3BucketName:
    Description: The name of the S3 bucket to store the source artifacts
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "CodePipeline Settings"
        Parameters:
          - PipelineName
          - S3BucketName

Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketName
      VersioningConfiguration:
        Status: Enabled

  EKSControlPlaneBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: PerformanceTestEKSControlPlane-cfn # TODO maybe pass as param?
      Description: Project to build the Performance Test Blueprint EKS control plane for distributed load generation.
      ConcurrentBuildLimit: 1
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-aarch64-standard:2.0
        Type: ARM_CONTAINER
      LogsConfig:
        CloudWatchLogs:
          GroupName: PerformanceTestBluePrintPipeline-cfn
          StreamName: EKSControlPlaneBuild
          Status: ENABLED
      Source:
        BuildSpec: buildspec_control_plane.yml
        Type: CODEPIPELINE

  EKSWorkersBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: PerformanceTestEKSWorkers-cfn # TODO maybe pass as param?
      Description: Project to build the Performance Test Blueprint EKS control plane for distributed load generation.
      ConcurrentBuildLimit: 1
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-aarch64-standard:2.0
        Type: ARM_CONTAINER
      LogsConfig:
        CloudWatchLogs:
          GroupName: PerformanceTestBluePrintPipeline-cfn
          StreamName: EKSWorkersBuild
          Status: ENABLED
      Source:
        BuildSpec: buildspec_workers.yml
        Type: CODEPIPELINE

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref 'ArtifactStoreBucket'
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Ref 'PipelineName'
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:
        - Name: Source
          Actions:
            - Name: AWSCodeCommit
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              Configuration:
                RepositoryName: Performance-Test-Blueprint
                BranchName: main
              OutputArtifacts:
                - Name: PerformanceTestBlueprintSourceArtifact
              RunOrder: '1'
        - Name: BuildEKSControlPlane
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref EKSControlPlaneBuild
              InputArtifacts:
                - Name: PerformanceTestBlueprintSourceArtifact
              RunOrder: '1'
        - Name: BuildEKSWorkers
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref EKSWorkersBuild
              InputArtifacts:
                - Name: PerformanceTestBlueprintSourceArtifact
              RunOrder: '1'

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'ec2:*'
                  - 'cloudformation:*'
                  - 'autoscaling:*'
                  - 'eks:*'
                  - 'ssm:*'
                  - 'logs:*'
                  - 'codecommit:*'
                  - 's3:*'
                Effect: Allow
                Resource: '*'
              - Action:
                  - 'iam:GetPolicyVersion'
                  - 'iam:ListRoleTags'
                  - 'iam:GenerateServiceLastAccessedDetails'
                  - 'iam:ListPoliciesGrantingServiceAccess'
                  - 'iam:ListInstanceProfileTags'
                  - 'iam:ListServiceSpecificCredentials'
                  - 'iam:ListMFADevices'
                  - 'iam:ListSigningCertificates'
                  - 'iam:GetGroup'
                  - 'iam:GetContextKeysForPrincipalPolicy'
                  - 'iam:ListInstanceProfilesForRole'
                  - 'iam:GetServiceLinkedRoleDeletionStatus'
                  - 'iam:ListSSHPublicKeys'
                  - 'iam:SimulatePrincipalPolicy'
                  - 'iam:GenerateOrganizationsAccessReport'
                  - 'iam:ListAttachedRolePolicies'
                  - 'iam:ListOpenIDConnectProviderTags'
                  - 'iam:ListAttachedUserPolicies'
                  - 'iam:ListSAMLProviderTags'
                  - 'iam:ListAttachedGroupPolicies'
                  - 'iam:ListPolicyTags'
                  - 'iam:ListRolePolicies'
                  - 'iam:GetSAMLProvider'
                  - 'iam:ListAccessKeys'
                  - 'iam:GetServerCertificate'
                  - 'iam:GetRole'
                  - 'iam:GetInstanceProfile'
                  - 'iam:GetPolicy'
                  - 'iam:ListGroupPolicies'
                  - 'iam:GetAccessKeyLastUsed'
                  - 'iam:GetSSHPublicKey'
                  - 'iam:ListEntitiesForPolicy'
                  - 'iam:ListUserPolicies'
                  - 'iam:ListInstanceProfiles'
                  - 'iam:ListPolicyVersions'
                  - 'iam:GetUserPolicy'
                  - 'iam:ListGroupsForUser'
                  - 'iam:ListServerCertificateTags'
                  - 'iam:GetGroupPolicy'
                  - 'iam:GetUser'
                  - 'iam:GetOpenIDConnectProvider'
                  - 'iam:ListMFADeviceTags'
                  - 'iam:GetRolePolicy'
                  - 'iam:GetLoginProfile'
                  - 'iam:ListUserTags'
                  - 'iam:ListPolicies'
                  - 'iam:GenerateCredentialReport'
                  - 'iam:GetAccountPasswordPolicy'
                  - 'iam:ListSAMLProviders'
                  - 'iam:GetServiceLastAccessedDetailsWithEntities'
                  - 'iam:ListServerCertificates'
                  - 'iam:ListRoles'
                  - 'iam:GetServiceLastAccessedDetails'
                  - 'iam:ListVirtualMFADevices'
                  - 'iam:GetOrganizationsAccessReport'
                  - 'iam:GetContextKeysForCustomPolicy'
                  - 'iam:SimulateCustomPolicy'
                  - 'iam:ListOpenIDConnectProviders'
                  - 'iam:ListAccountAliases'
                  - 'iam:ListUsers'
                  - 'iam:ListGroups'
                  - 'iam:GetAccountAuthorizationDetails'
                  - 'iam:GetCredentialReport'
                  - 'iam:GetAccountSummary'
                  - 'iam:TagRole'
                  - 'iam:CreateRole'
                  - 'iam:AttachRolePolicy'
                  - 'iam:DetachRolePolicy'
                  - 'iam:DeleteRole'
                  - 'iam:PassRole'
                Effect: Allow
                Resource: 'arn:aws:iam::899456967600:role/*'

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'codecommit:*'
                - 'codebuild:*'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'iam:PassRole'
                Effect: Allow
                Resource: '*'